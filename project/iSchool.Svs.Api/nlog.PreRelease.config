<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="LogFiles\internal-nlog.txt">

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <!-- the targets to write to -->
  <targets>
    <!-- write logs to file  -->
    <target xsi:type="File" name="allfile" fileName="LogFiles\nlog-all-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

    <!-- another file log, only own logs. Uses some ASP.NET core renderers -->
    <target xsi:type="File" name="ownFile-web" fileName="LogFiles\nlog-own-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />

    <!--将日志存入sqlserver-->
    <target name="database" xsi:type="Database"
          dbProvider="System.Data.SqlClient">
      <connectionString>${var:connectionString}</connectionString>
      <commandText>
        INSERT INTO [iSchoolLogs].dbo.[SvsLogs](
        Level,Time,Url,BusinessId,Application,Class,Method,Params,Ip,Host,
        ThreadId,UserId,Operator,Role,Caption,Content,ErrorCode,Error,StackTrace )
        VALUES(@Level,@Time,@Url,@BusinessId,@Application,
        @Class,@Method,@Params,@Ip,@Host,@ThreadId,
        @UserId,@Operator,@Role,@Caption,@Content,
        @ErrorCode,@Error,@StackTrace)
      </commandText>
      <parameter name="@BusinessId" layout="${event-properties:item=BusinessId}" />
      <parameter name="@Role" layout="${event-properties:item=Role}" />
      <parameter name="@ErrorCode" layout="${event-properties:item=ErrorCode}" />
      <parameter name="@Level" layout="${event-properties:item=Level}" />
      <parameter name="@Time"  layout="${date:format=yyyy-MM-dd HH\:mm\:ss.mmm}" />

      <parameter name="@Url" layout="${event-properties:item=Url}" />
      <parameter name="@Application" layout="${event-properties:item=Application}" />
      <parameter name="@Class" layout="${event-properties:item=Class}" />
      <parameter name="@Method" layout="${event-properties:item=Method}" />
      <parameter name="@Params" layout="${event-properties:item=Params}" />
      <parameter name="@Ip" layout="${event-properties:item=Ip}" />
      <parameter name="@Host" layout="${event-properties:item=Host}" />
      <parameter name="@ThreadId" layout="${event-properties:item=ThreadId}" />
      <parameter name="@UserId" layout="${event-properties:item=UserId}" />
      <parameter name="@Operator" layout="${event-properties:item=Operator}" />
      <parameter name="@Caption" layout="${event-properties:item=Caption}" />
      <parameter name="@Content" layout="${event-properties:item=Content}" />
      <parameter name="@Error" layout="${event-properties:item=Error}" />
      <parameter name="@StackTrace" layout="${event-properties:item=StackTrace}" />
    </target>

    <!--请求日志-->
    <target  name="requestDatabase"  xsi:type="AsyncWrapper" timeToSleepBetweenBatches="5000" queueLimit="5000" overflowAction="Discard">
      <target xsi:type="Database"
        dbProvider="System.Data.SqlClient">
        <connectionString>${var:connectionString}</connectionString>
        <commandText>
          INSERT INTO [dbo].[SvsRequestLogs]([userId], [url], [method], [parameters],
          [time], [ipAddress], [latitude], [longitude], [ua], [deviceId], [fw],[fx],[platform],[system],[client],
          [path], [actionName],[refer]
          ) VALUES
          (@userId, @url,  @method,@parameters, @time, @ip, @latitude, @longitude, @ua,
          @deviceId, @fw,@fx, @platform, @system, @client,@path, @actionName,@refer);
        </commandText>
        <parameter name="@userId" layout="${event-properties:item=userId}" />
        <parameter name="@url" layout="${aspnet-Request-Url}" />
        <parameter name="@parameters" layout="${event-properties:item=params}" />
        <parameter name="@method" layout="${lowercase:${aspnet-Request-Method}}" />
        <parameter name="@time" layout="${date:format=yyyy-MM-dd HH\:mm\:ss.mmm}" />
        <parameter name="@ip" layout="${event-properties:item=ip}" />
        <parameter name="@ua" layout="${aspnet-Request-UserAgent}" />
        <parameter name="@latitude" layout="${event-properties:item=latitude}" />
        <parameter name="@longitude" layout="${event-properties:item=longitude}" />
        <parameter name="@platform" layout="${event-properties:item=platform}" />
        <parameter name="@client" layout="${event-properties:item=client}" />
        <parameter name="@system" layout="${event-properties:item=system}" />
        <parameter name="@deviceId" layout="${event-properties:item=deviceId}" />
        <parameter name="@fw" layout="${event-properties:item=fw}" />
        <parameter name="@fx" layout="${event-properties:item=fx}" />
        <parameter name="@refer" layout="${aspnet-Request-Referrer}" />
        <parameter name="@path" layout="${event-properties:item=path}" />
        <parameter name="@actionName" layout="${event-properties:item=actionName}" />
      </target>
    </target>

    <target xsi:type="ColoredConsole"
         name="ConsoleString"
         layout="[${lowercase:${level}}]:${date:format=HH\:mm\:ss} ${logger} [${threadid}]||
                      ${message} ${exception:format=toString,Data}">
    </target>

  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="allfile" />
    <logger name="iSchool.Svs.Api.Filters.GlobalExceptionsFilter" minlevel="Info" writeTo="database"/>
    <logger name="iSchool.Svs.Api.Middlewares.LoggerMiddleware" minlevel="Info" writeTo="requestDatabase" />
    <!--Skip non-critical Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <!-- BlackHole without writeTo -->
    <logger name="*" minlevel="Debug" writeTo="ownFile-web" />
    <!--<logger name="*" minlevel="Trace" writeTo="ConsoleString" />-->
  </rules>
</nlog>